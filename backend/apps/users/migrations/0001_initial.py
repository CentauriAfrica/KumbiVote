# Generated by Django 5.1 on 2024-10-12 10:49

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, editable=False)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("first_name", models.CharField(max_length=30)),
                ("middle_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                ("phone_no", models.CharField(blank=True, max_length=20, unique=True)),
                ("created", models.DateTimeField(auto_now_add=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female")],
                        default=None,
                    ),
                ),
                (
                    "id_type",
                    models.CharField(
                        choices=[
                            ("IDCARD", "Identity Card"),
                            ("PASSPORT", "Passport"),
                            ("ALIENID", "Alien ID"),
                        ],
                        default="IDCARD",
                    ),
                ),
                (
                    "document_id",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("document_expiry_date", models.DateField(blank=True, default=None)),
                ("dob", models.DateField(blank=True, default=None)),
                (
                    "blockchain_id",
                    models.CharField(blank=True, default=None, max_length=100),
                ),
                (
                    "profile_photo",
                    models.CharField(blank=True, default=None, max_length=225),
                ),
                (
                    "oauth_provider",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GOOGLE", "Google"),
                            ("FACEBOOK", "Facebook"),
                            ("GITHUB", "Github"),
                            ("TWITTER", "Twitter"),
                            ("APPLE", "Apple"),
                            ("NONE", "None"),
                        ],
                        default=None,
                    ),
                ),
                ("updated", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "ordering": ["-created"],
                "default_related_name": "%(app_label)s_%(model_name)s",
                "indexes": [
                    models.Index(fields=["uuid"], name="uuidx"),
                    models.Index(
                        fields=["first_name", "middle_name", "last_name"], name="namex"
                    ),
                    models.Index(fields=["phone_no"], name="phonex"),
                    models.Index(fields=["email"], name="emailx"),
                    models.Index(fields=["created"], name="timex"),
                    models.Index(fields=["gender"], name="genderx"),
                    models.Index(fields=["dob"], name="dobx"),
                    models.Index(fields=["blockchain_id"], name="blockidx"),
                ],
                "unique_together": {("first_name", "last_name", "email")},
            },
        ),
    ]
