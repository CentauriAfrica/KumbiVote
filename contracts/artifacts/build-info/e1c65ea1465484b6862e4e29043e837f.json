{
	"id": "e1c65ea1465484b6862e4e29043e837f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Election.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract UserRegistration {\r\n    \r\n    // Admin address\r\n    address public admin;\r\n\r\n    // User structure storing minimal data\r\n    struct User {\r\n        bool isRegistered;  // Registration status\r\n    }\r\n    \r\n    // Mapping from user address to user details\r\n    mapping(address => User) private users;\r\n    \r\n    // Events for logging important actions\r\n    event UserRegistered(address indexed userAddress);\r\n    event UserUnregistered(address indexed userAddress);\r\n\r\n    // Modifier to restrict functions to only the admin\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Not an admin\");\r\n        _;\r\n    }\r\n\r\n    // Constructor to initialize the admin of the contract\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    // Function to register a user\r\n    function registerUser() public {\r\n        require(!users[msg.sender].isRegistered, \"User already registered\");\r\n\r\n        users[msg.sender] = User({\r\n            isRegistered: true\r\n        });\r\n\r\n        emit UserRegistered(msg.sender);\r\n    }\r\n\r\n    // Function for users to unregister themselves, removing their registration data from the contract\r\n    ///function unregister() public {\r\n        //require(users[msg.sender].isRegistered, \"User not registered\");\r\n\r\n        //delete users[msg.sender];\r\n\r\n        //emit UserUnregistered(msg.sender);\r\n\r\n    // Function to check if a user is registered\r\n    function isUserRegistered(address _userAddress) public view returns (bool) {\r\n        return users[_userAddress].isRegistered;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Election.sol": {
				"UserRegistration": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "UserRegistered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "UserUnregistered",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								}
							],
							"name": "isUserRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "registerUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Election.sol\":60:1601  contract UserRegistration {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Election.sol\":761:812  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Election.sol\":794:804  msg.sender */\n  caller\n    /* \"contracts/Election.sol\":786:791  admin */\n  0x00\n  dup1\n    /* \"contracts/Election.sol\":786:804  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Election.sol\":60:1601  contract UserRegistration {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Election.sol\":60:1601  contract UserRegistration {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x163f7522\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4d3820eb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Election.sol\":1465:1598  function isUserRegistered(address _userAddress) public view returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Election.sol\":856:1100  function registerUser() public {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Election.sol\":121:141  address public admin */\n    tag_5:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Election.sol\":1465:1598  function isUserRegistered(address _userAddress) public view returns (bool) {... */\n    tag_9:\n        /* \"contracts/Election.sol\":1534:1538  bool */\n      0x00\n        /* \"contracts/Election.sol\":1558:1563  users */\n      0x01\n        /* \"contracts/Election.sol\":1558:1577  users[_userAddress] */\n      0x00\n        /* \"contracts/Election.sol\":1564:1576  _userAddress */\n      dup4\n        /* \"contracts/Election.sol\":1558:1577  users[_userAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Election.sol\":1558:1590  users[_userAddress].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Election.sol\":1551:1590  return users[_userAddress].isRegistered */\n      swap1\n      pop\n        /* \"contracts/Election.sol\":1465:1598  function isUserRegistered(address _userAddress) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Election.sol\":856:1100  function registerUser() public {... */\n    tag_13:\n        /* \"contracts/Election.sol\":907:912  users */\n      0x01\n        /* \"contracts/Election.sol\":907:924  users[msg.sender] */\n      0x00\n        /* \"contracts/Election.sol\":913:923  msg.sender */\n      caller\n        /* \"contracts/Election.sol\":907:924  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Election.sol\":907:937  users[msg.sender].isRegistered */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Election.sol\":906:937  !users[msg.sender].isRegistered */\n      iszero\n        /* \"contracts/Election.sol\":898:965  require(!users[msg.sender].isRegistered, \"User already registered\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_21\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"contracts/Election.sol\":998:1048  User({... */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Election.sol\":1032:1036  true */\n      0x01\n        /* \"contracts/Election.sol\":998:1048  User({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Election.sol\":978:983  users */\n      0x01\n        /* \"contracts/Election.sol\":978:995  users[msg.sender] */\n      0x00\n        /* \"contracts/Election.sol\":984:994  msg.sender */\n      caller\n        /* \"contracts/Election.sol\":978:995  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Election.sol\":978:1048  users[msg.sender] = User({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Election.sol\":1081:1091  msg.sender */\n      caller\n        /* \"contracts/Election.sol\":1066:1092  UserRegistered(msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b9\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Election.sol\":856:1100  function registerUser() public {... */\n      jump\t// out\n        /* \"contracts/Election.sol\":121:141  address public admin */\n    tag_15:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_24:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_26:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_27:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_42\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_28:\n        /* \"#utility.yul\":641:665   */\n      tag_44\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_27\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_45:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_29:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_47\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_28\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_50\n      tag_24\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":917:1036   */\n    tag_49:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_51\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_29\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_30:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_31:\n        /* \"#utility.yul\":1353:1374   */\n      tag_54\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_30\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_11:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_56\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_31\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1721   */\n    tag_32:\n        /* \"#utility.yul\":1690:1714   */\n      tag_58\n        /* \"#utility.yul\":1708:1713   */\n      dup2\n        /* \"#utility.yul\":1690:1714   */\n      tag_27\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1685:1688   */\n      dup3\n        /* \"#utility.yul\":1678:1715   */\n      mstore\n        /* \"#utility.yul\":1603:1721   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1727:1949   */\n    tag_17:\n        /* \"#utility.yul\":1820:1824   */\n      0x00\n        /* \"#utility.yul\":1858:1860   */\n      0x20\n        /* \"#utility.yul\":1847:1856   */\n      dup3\n        /* \"#utility.yul\":1843:1861   */\n      add\n        /* \"#utility.yul\":1835:1861   */\n      swap1\n      pop\n        /* \"#utility.yul\":1871:1942   */\n      tag_60\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1928:1937   */\n      dup4\n        /* \"#utility.yul\":1924:1941   */\n      add\n        /* \"#utility.yul\":1915:1921   */\n      dup5\n        /* \"#utility.yul\":1871:1942   */\n      tag_32\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1727:1949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1955:2124   */\n    tag_33:\n        /* \"#utility.yul\":2039:2050   */\n      0x00\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2068:2071   */\n      dup3\n        /* \"#utility.yul\":2061:2080   */\n      mstore\n        /* \"#utility.yul\":2113:2117   */\n      0x20\n        /* \"#utility.yul\":2108:2111   */\n      dup3\n        /* \"#utility.yul\":2104:2118   */\n      add\n        /* \"#utility.yul\":2089:2118   */\n      swap1\n      pop\n        /* \"#utility.yul\":1955:2124   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2130:2303   */\n    tag_34:\n        /* \"#utility.yul\":2270:2295   */\n      0x5573657220616c72656164792072656769737465726564000000000000000000\n        /* \"#utility.yul\":2266:2267   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup3\n        /* \"#utility.yul\":2254:2268   */\n      add\n        /* \"#utility.yul\":2247:2296   */\n      mstore\n        /* \"#utility.yul\":2130:2303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2675   */\n    tag_35:\n        /* \"#utility.yul\":2451:2454   */\n      0x00\n        /* \"#utility.yul\":2472:2539   */\n      tag_64\n        /* \"#utility.yul\":2536:2538   */\n      0x17\n        /* \"#utility.yul\":2531:2534   */\n      dup4\n        /* \"#utility.yul\":2472:2539   */\n      tag_33\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2465:2539   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2641   */\n      tag_65\n        /* \"#utility.yul\":2637:2640   */\n      dup3\n        /* \"#utility.yul\":2548:2641   */\n      tag_34\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2666:2668   */\n      0x20\n        /* \"#utility.yul\":2661:2664   */\n      dup3\n        /* \"#utility.yul\":2657:2669   */\n      add\n        /* \"#utility.yul\":2650:2669   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2681:3100   */\n    tag_22:\n        /* \"#utility.yul\":2847:2851   */\n      0x00\n        /* \"#utility.yul\":2885:2887   */\n      0x20\n        /* \"#utility.yul\":2874:2883   */\n      dup3\n        /* \"#utility.yul\":2870:2888   */\n      add\n        /* \"#utility.yul\":2862:2888   */\n      swap1\n      pop\n        /* \"#utility.yul\":2934:2943   */\n      dup2\n        /* \"#utility.yul\":2928:2932   */\n      dup2\n        /* \"#utility.yul\":2924:2944   */\n      sub\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2909:2918   */\n      dup4\n        /* \"#utility.yul\":2905:2922   */\n      add\n        /* \"#utility.yul\":2898:2945   */\n      mstore\n        /* \"#utility.yul\":2962:3093   */\n      tag_67\n        /* \"#utility.yul\":3088:3092   */\n      dup2\n        /* \"#utility.yul\":2962:3093   */\n      tag_35\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2954:3093   */\n      swap1\n      pop\n        /* \"#utility.yul\":2681:3100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208fccd35b327fe3ae2265bb33b2ab030b6903a3e2bcb094e27624e873097a122564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e48061005b5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063163f7522146100435780634d3820eb14610073578063f851a4401461007d575b5f80fd5b61005d600480360381019061005891906102b0565b61009b565b60405161006a91906102f5565b60405180910390f35b61007b6100ef565b005b61008561022f565b604051610092919061031d565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161561017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017290610390565b60405180910390fd5b60405180602001604052806001151581525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b960405160405180910390a2565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61027f82610256565b9050919050565b61028f81610275565b8114610299575f80fd5b50565b5f813590506102aa81610286565b92915050565b5f602082840312156102c5576102c4610252565b5b5f6102d28482850161029c565b91505092915050565b5f8115159050919050565b6102ef816102db565b82525050565b5f6020820190506103085f8301846102e6565b92915050565b61031781610275565b82525050565b5f6020820190506103305f83018461030e565b92915050565b5f82825260208201905092915050565b7f5573657220616c726561647920726567697374657265640000000000000000005f82015250565b5f61037a601783610336565b915061038582610346565b602082019050919050565b5f6020820190508181035f8301526103a78161036e565b905091905056fea26469706673582212208fccd35b327fe3ae2265bb33b2ab030b6903a3e2bcb094e27624e873097a122564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E4 DUP1 PUSH2 0x5B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x163F7522 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x4D3820EB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27F DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F DUP2 PUSH2 0x275 JUMP JUMPDEST DUP2 EQ PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA DUP2 PUSH2 0x286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x2C4 PUSH2 0x252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D2 DUP5 DUP3 DUP6 ADD PUSH2 0x29C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x308 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x317 DUP2 PUSH2 0x275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x330 PUSH0 DUP4 ADD DUP5 PUSH2 0x30E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5573657220616C72656164792072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x37A PUSH1 0x17 DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x385 DUP3 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3A7 DUP2 PUSH2 0x36E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xD3 JUMPDEST ORIGIN PUSH32 0xE3AE2265BB33B2AB030B6903A3E2BCB094E27624E873097A122564736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1541:0:-:0;;;761:51;;;;;;;;;;794:10;786:5;;:18;;;;;;;;;;;;;;;;;;60:1541;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@admin_3": {
									"entryPoint": 559,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isUserRegistered_82": {
									"entryPoint": 155,
									"id": 82,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@registerUser_68": {
									"entryPoint": 239,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40": {
									"entryPoint": 838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3103:1",
										"nodeType": "YulBlock",
										"src": "0:3103:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "907:263:1",
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:1",
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nativeSrc": "955:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nativeSrc": "955:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nativeSrc": "924:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:1",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nativeSrc": "920:32:1",
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nativeSrc": "917:119:1",
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nativeSrc": "1046:117:1",
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nativeSrc": "1061:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nativeSrc": "1121:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nativeSrc": "1100:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:1",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:1",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:1",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nativeSrc": "1218:48:1",
													"nodeType": "YulBlock",
													"src": "1218:48:1",
													"statements": [
														{
															"nativeSrc": "1228:32:1",
															"nodeType": "YulAssignment",
															"src": "1228:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:1"
																		},
																		"nativeSrc": "1246:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:1"
																},
																"nativeSrc": "1239:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:1",
														"nodeType": "YulTypedName",
														"src": "1200:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:1",
														"nodeType": "YulTypedName",
														"src": "1210:7:1",
														"type": ""
													}
												],
												"src": "1176:90:1"
											},
											{
												"body": {
													"nativeSrc": "1331:50:1",
													"nodeType": "YulBlock",
													"src": "1331:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:1"
																		},
																		"nativeSrc": "1353:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nativeSrc": "1341:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:1"
															},
															"nativeSrc": "1341:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:1",
														"nodeType": "YulTypedName",
														"src": "1319:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:1",
														"nodeType": "YulTypedName",
														"src": "1326:3:1",
														"type": ""
													}
												],
												"src": "1272:109:1"
											},
											{
												"body": {
													"nativeSrc": "1479:118:1",
													"nodeType": "YulBlock",
													"src": "1479:118:1",
													"statements": [
														{
															"nativeSrc": "1489:26:1",
															"nodeType": "YulAssignment",
															"src": "1489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:1"
																},
																"nativeSrc": "1497:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:1"
																		},
																		"nativeSrc": "1572:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:1"
																},
																"nativeSrc": "1525:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:1"
															},
															"nativeSrc": "1525:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:1",
														"nodeType": "YulTypedName",
														"src": "1451:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:1",
														"nodeType": "YulTypedName",
														"src": "1474:4:1",
														"type": ""
													}
												],
												"src": "1387:210:1"
											},
											{
												"body": {
													"nativeSrc": "1668:53:1",
													"nodeType": "YulBlock",
													"src": "1668:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1685:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1685:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1708:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1708:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1690:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1690:17:1"
																		},
																		"nativeSrc": "1690:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1690:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1678:6:1"
																},
																"nativeSrc": "1678:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1678:37:1"
															},
															"nativeSrc": "1678:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1678:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1603:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1656:5:1",
														"nodeType": "YulTypedName",
														"src": "1656:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1663:3:1",
														"nodeType": "YulTypedName",
														"src": "1663:3:1",
														"type": ""
													}
												],
												"src": "1603:118:1"
											},
											{
												"body": {
													"nativeSrc": "1825:124:1",
													"nodeType": "YulBlock",
													"src": "1825:124:1",
													"statements": [
														{
															"nativeSrc": "1835:26:1",
															"nodeType": "YulAssignment",
															"src": "1835:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1858:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1858:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:1"
																},
																"nativeSrc": "1843:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1843:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1915:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1928:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1939:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1939:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:1"
																		},
																		"nativeSrc": "1924:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1924:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1871:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1871:43:1"
																},
																"nativeSrc": "1871:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1871:71:1"
															},
															"nativeSrc": "1871:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1871:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1727:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1797:9:1",
														"nodeType": "YulTypedName",
														"src": "1797:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1809:6:1",
														"nodeType": "YulTypedName",
														"src": "1809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1820:4:1",
														"nodeType": "YulTypedName",
														"src": "1820:4:1",
														"type": ""
													}
												],
												"src": "1727:222:1"
											},
											{
												"body": {
													"nativeSrc": "2051:73:1",
													"nodeType": "YulBlock",
													"src": "2051:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2068:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2068:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2073:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2073:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2061:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:1"
																},
																"nativeSrc": "2061:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2061:19:1"
															},
															"nativeSrc": "2061:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2061:19:1"
														},
														{
															"nativeSrc": "2089:29:1",
															"nodeType": "YulAssignment",
															"src": "2089:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2108:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2108:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2113:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2113:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2104:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:1"
																},
																"nativeSrc": "2104:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2089:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "2089:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1955:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2023:3:1",
														"nodeType": "YulTypedName",
														"src": "2023:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2028:6:1",
														"nodeType": "YulTypedName",
														"src": "2028:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2039:11:1",
														"nodeType": "YulTypedName",
														"src": "2039:11:1",
														"type": ""
													}
												],
												"src": "1955:169:1"
											},
											{
												"body": {
													"nativeSrc": "2236:67:1",
													"nodeType": "YulBlock",
													"src": "2236:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2258:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2258:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2266:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2266:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2254:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:1"
																		},
																		"nativeSrc": "2254:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2254:14:1"
																	},
																	{
																		"hexValue": "5573657220616c72656164792072656769737465726564",
																		"kind": "string",
																		"nativeSrc": "2270:25:1",
																		"nodeType": "YulLiteral",
																		"src": "2270:25:1",
																		"type": "",
																		"value": "User already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2247:6:1"
																},
																"nativeSrc": "2247:49:1",
																"nodeType": "YulFunctionCall",
																"src": "2247:49:1"
															},
															"nativeSrc": "2247:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "2247:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40",
												"nativeSrc": "2130:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2228:6:1",
														"nodeType": "YulTypedName",
														"src": "2228:6:1",
														"type": ""
													}
												],
												"src": "2130:173:1"
											},
											{
												"body": {
													"nativeSrc": "2455:220:1",
													"nodeType": "YulBlock",
													"src": "2455:220:1",
													"statements": [
														{
															"nativeSrc": "2465:74:1",
															"nodeType": "YulAssignment",
															"src": "2465:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2531:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2531:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2472:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2472:58:1"
																},
																"nativeSrc": "2472:67:1",
																"nodeType": "YulFunctionCall",
																"src": "2472:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2637:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2637:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40",
																	"nativeSrc": "2548:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "2548:88:1"
																},
																"nativeSrc": "2548:93:1",
																"nodeType": "YulFunctionCall",
																"src": "2548:93:1"
															},
															"nativeSrc": "2548:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "2548:93:1"
														},
														{
															"nativeSrc": "2650:19:1",
															"nodeType": "YulAssignment",
															"src": "2650:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2661:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2657:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2657:3:1"
																},
																"nativeSrc": "2657:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2657:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2650:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2309:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2443:3:1",
														"nodeType": "YulTypedName",
														"src": "2443:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2451:3:1",
														"nodeType": "YulTypedName",
														"src": "2451:3:1",
														"type": ""
													}
												],
												"src": "2309:366:1"
											},
											{
												"body": {
													"nativeSrc": "2852:248:1",
													"nodeType": "YulBlock",
													"src": "2852:248:1",
													"statements": [
														{
															"nativeSrc": "2862:26:1",
															"nodeType": "YulAssignment",
															"src": "2862:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2874:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2874:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2885:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2885:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2870:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:1"
																},
																"nativeSrc": "2870:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2870:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2909:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2909:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2920:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2920:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2905:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:1"
																		},
																		"nativeSrc": "2905:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2928:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2928:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2924:3:1"
																		},
																		"nativeSrc": "2924:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2924:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2898:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2898:6:1"
																},
																"nativeSrc": "2898:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2898:47:1"
															},
															"nativeSrc": "2898:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2898:47:1"
														},
														{
															"nativeSrc": "2954:139:1",
															"nodeType": "YulAssignment",
															"src": "2954:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3088:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3088:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2962:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "2962:124:1"
																},
																"nativeSrc": "2962:131:1",
																"nodeType": "YulFunctionCall",
																"src": "2962:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2954:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2954:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2681:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2832:9:1",
														"nodeType": "YulTypedName",
														"src": "2832:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:1",
														"nodeType": "YulTypedName",
														"src": "2847:4:1",
														"type": ""
													}
												],
												"src": "2681:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40(memPtr) {\n\n        mstore(add(memPtr, 0), \"User already registered\")\n\n    }\n\n    function abi_encode_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063163f7522146100435780634d3820eb14610073578063f851a4401461007d575b5f80fd5b61005d600480360381019061005891906102b0565b61009b565b60405161006a91906102f5565b60405180910390f35b61007b6100ef565b005b61008561022f565b604051610092919061031d565b60405180910390f35b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff169050919050565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff161561017b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017290610390565b60405180910390fd5b60405180602001604052806001151581525060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b960405160405180910390a2565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61027f82610256565b9050919050565b61028f81610275565b8114610299575f80fd5b50565b5f813590506102aa81610286565b92915050565b5f602082840312156102c5576102c4610252565b5b5f6102d28482850161029c565b91505092915050565b5f8115159050919050565b6102ef816102db565b82525050565b5f6020820190506103085f8301846102e6565b92915050565b61031781610275565b82525050565b5f6020820190506103305f83018461030e565b92915050565b5f82825260208201905092915050565b7f5573657220616c726561647920726567697374657265640000000000000000005f82015250565b5f61037a601783610336565b915061038582610346565b602082019050919050565b5f6020820190508181035f8301526103a78161036e565b905091905056fea26469706673582212208fccd35b327fe3ae2265bb33b2ab030b6903a3e2bcb094e27624e873097a122564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x163F7522 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x4D3820EB EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xEF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172 SWAP1 PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27F DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F DUP2 PUSH2 0x275 JUMP JUMPDEST DUP2 EQ PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AA DUP2 PUSH2 0x286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x2C4 PUSH2 0x252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D2 DUP5 DUP3 DUP6 ADD PUSH2 0x29C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EF DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x308 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x317 DUP2 PUSH2 0x275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x330 PUSH0 DUP4 ADD DUP5 PUSH2 0x30E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5573657220616C72656164792072656769737465726564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x37A PUSH1 0x17 DUP4 PUSH2 0x336 JUMP JUMPDEST SWAP2 POP PUSH2 0x385 DUP3 PUSH2 0x346 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3A7 DUP2 PUSH2 0x36E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xD3 JUMPDEST ORIGIN PUSH32 0xE3AE2265BB33B2AB030B6903A3E2BCB094E27624E873097A122564736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "60:1541:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;856:244;;;:::i;:::-;;121:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1465:133;1534:4;1558:5;:19;1564:12;1558:19;;;;;;;;;;;;;;;:32;;;;;;;;;;;;1551:39;;1465:133;;;:::o;856:244::-;907:5;:17;913:10;907:17;;;;;;;;;;;;;;;:30;;;;;;;;;;;;906:31;898:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;998:50;;;;;;;;1032:4;998:50;;;;;978:5;:17;984:10;978:17;;;;;;;;;;;;;;;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1081:10;1066:26;;;;;;;;;;;;856:244::o;121:20::-;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:118::-;1690:24;1708:5;1690:24;:::i;:::-;1685:3;1678:37;1603:118;;:::o;1727:222::-;1820:4;1858:2;1847:9;1843:18;1835:26;;1871:71;1939:1;1928:9;1924:17;1915:6;1871:71;:::i;:::-;1727:222;;;;:::o;1955:169::-;2039:11;2073:6;2068:3;2061:19;2113:4;2108:3;2104:14;2089:29;;1955:169;;;;:::o;2130:173::-;2270:25;2266:1;2258:6;2254:14;2247:49;2130:173;:::o;2309:366::-;2451:3;2472:67;2536:2;2531:3;2472:67;:::i;:::-;2465:74;;2548:93;2637:3;2548:93;:::i;:::-;2666:2;2661:3;2657:12;2650:19;;2309:366;;;:::o;2681:419::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2934:9;2928:4;2924:20;2920:1;2909:9;2905:17;2898:47;2962:131;3088:4;2962:131;:::i;:::-;2954:139;;2681:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199200",
								"executionCost": "24508",
								"totalCost": "223708"
							},
							"external": {
								"admin()": "2527",
								"isUserRegistered(address)": "2853",
								"registerUser()": "27973"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 812,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 761,
									"end": 812,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 761,
									"end": 812,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 761,
									"end": 812,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 794,
									"end": 804,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 786,
									"end": 791,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 791,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 786,
									"end": 804,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 804,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 786,
									"end": 804,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 786,
									"end": 804,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 1601,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fccd35b327fe3ae2265bb33b2ab030b6903a3e2bcb094e27624e873097a122564736f6c634300081a0033",
									".code": [
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "163F7522"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "4D3820EB"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "F851A440"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 1601,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1465,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1465,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1465,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 856,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1551,
											"end": 1590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 856,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 907,
											"end": 912,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 913,
											"end": 923,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 907,
											"end": 937,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 907,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 907,
											"end": 937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 906,
											"end": 937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 898,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 898,
											"end": 965,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 998,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 983,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 994,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 978,
											"end": 1048,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1081,
											"end": 1091,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9"
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1066,
											"end": 1092,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 856,
											"end": 1100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 121,
											"end": 141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 121,
											"end": 141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1708,
											"end": 1713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1690,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1690,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1688,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1715,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1860,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1835,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1924,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1871,
											"end": 1942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1871,
											"end": 1942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1727,
											"end": 1949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2039,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2113,
											"end": 2117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2111,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 2124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "5573657220616C72656164792072656769737465726564000000000000000000"
										},
										{
											"begin": 2266,
											"end": 2267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2531,
											"end": 2534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2472,
											"end": 2539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2472,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2637,
											"end": 2640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2548,
											"end": 2641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2548,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2661,
											"end": 2664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2309,
											"end": 2675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2887,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2862,
											"end": 2888,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2962,
											"end": 3093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2962,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 3093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Election.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"isUserRegistered(address)": "163f7522",
							"registerUser()": "4d3820eb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"UserUnregistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"isUserRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isUserRegistered(address)\":{\"notice\":\"function unregister() public {\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Election.sol\":\"UserRegistration\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Election.sol\":{\"keccak256\":\"0x1fcf291e89ed42c5807660173224d0f8b579fd6e014d2733e4343913bbd19424\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c889def93a90354edc6cffcb1ff89f78b7c15d0ad3efedee4cde40bf0f0edc\",\"dweb:/ipfs/QmPkPcdwSoA1HLNZgj8ULSvckLZXF5DFgyaXM9npd8KnQb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Election.sol:UserRegistration",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 11,
								"contract": "contracts/Election.sol:UserRegistration",
								"label": "users",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(User)6_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(User)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct UserRegistration.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)6_storage"
							},
							"t_struct(User)6_storage": {
								"encoding": "inplace",
								"label": "struct UserRegistration.User",
								"members": [
									{
										"astId": 5,
										"contract": "contracts/Election.sol:UserRegistration",
										"label": "isRegistered",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isUserRegistered(address)": {
								"notice": "function unregister() public {"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Election.sol": {
				"ast": {
					"absolutePath": "contracts/Election.sol",
					"exportedSymbols": {
						"UserRegistration": [
							83
						]
					},
					"id": 84,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UserRegistration",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "UserRegistration",
							"nameLocation": "69:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 3,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "136:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "121:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "121:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "UserRegistration.User",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "isRegistered",
											"nameLocation": "222:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "217:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "217:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "201:4:0",
									"nodeType": "StructDefinition",
									"scope": 83,
									"src": "194:72:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "361:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "328:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
										"typeString": "mapping(address => struct UserRegistration.User)"
									},
									"typeName": {
										"id": 10,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 7,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "336:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "328:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
											"typeString": "mapping(address => struct UserRegistration.User)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 9,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 8,
												"name": "User",
												"nameLocations": [
													"347:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 6,
												"src": "347:4:0"
											},
											"referencedDeclaration": 6,
											"src": "347:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$6_storage_ptr",
												"typeString": "struct UserRegistration.User"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b9",
									"id": 15,
									"name": "UserRegistered",
									"nameLocation": "430:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "461:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "445:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "444:29:0"
									},
									"src": "424:50:0"
								},
								{
									"anonymous": false,
									"eventSelector": "69c4cef1aa574ae7852ac8b784ab60926951c604b70049150e4091759ea98076",
									"id": 19,
									"name": "UserUnregistered",
									"nameLocation": "486:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "519:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "503:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:29:0"
									},
									"src": "480:52:0"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "618:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 22,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "637:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "641:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "637:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 24,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "651:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "637:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "658:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "629:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "629:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "629:44:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "684:1:0"
											}
										]
									},
									"id": 31,
									"name": "onlyAdmin",
									"nameLocation": "606:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:0"
									},
									"src": "597:96:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "775:37:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 34,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "786:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "794:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "798:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "794:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "786:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "786:18:0"
											}
										]
									},
									"id": 40,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "772:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:0:0"
									},
									"scope": 83,
									"src": "761:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "887:213:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "906:31:0",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 44,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "907:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																			"typeString": "mapping(address => struct UserRegistration.User storage ref)"
																		}
																	},
																	"id": 47,
																	"indexExpression": {
																		"expression": {
																			"id": 45,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "913:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 46,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "917:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "913:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "907:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$6_storage",
																		"typeString": "struct UserRegistration.User storage ref"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "925:12:0",
																"memberName": "isRegistered",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "907:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220616c72656164792072656769737465726564",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "939:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40",
																"typeString": "literal_string \"User already registered\""
															},
															"value": "User already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40",
																"typeString": "literal_string \"User already registered\""
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "898:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "898:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "898:67:0"
											},
											{
												"expression": {
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 53,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "978:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																"typeString": "mapping(address => struct UserRegistration.User storage ref)"
															}
														},
														"id": 56,
														"indexExpression": {
															"expression": {
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "984:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "988:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "984:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "978:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct UserRegistration.User storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "74727565",
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1032:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 57,
															"name": "User",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "998:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_User_$6_storage_ptr_$",
																"typeString": "type(struct UserRegistration.User storage pointer)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1018:12:0"
														],
														"names": [
															"isRegistered"
														],
														"nodeType": "FunctionCall",
														"src": "998:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_memory_ptr",
															"typeString": "struct UserRegistration.User memory"
														}
													},
													"src": "978:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$6_storage",
														"typeString": "struct UserRegistration.User storage ref"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "978:70:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 63,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1081:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1085:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1081:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 62,
														"name": "UserRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "1066:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1066:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "EmitStatement",
												"src": "1061:31:0"
											}
										]
									},
									"functionSelector": "4d3820eb",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "registerUser",
									"nameLocation": "865:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:0"
									},
									"scope": 83,
									"src": "856:244:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "1540:58:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 76,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1558:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$6_storage_$",
																"typeString": "mapping(address => struct UserRegistration.User storage ref)"
															}
														},
														"id": 78,
														"indexExpression": {
															"id": 77,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "1564:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1558:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$6_storage",
															"typeString": "struct UserRegistration.User storage ref"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1578:12:0",
													"memberName": "isRegistered",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "1558:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 75,
												"id": 80,
												"nodeType": "Return",
												"src": "1551:39:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1212:33:0",
										"text": "function unregister() public {"
									},
									"functionSelector": "163f7522",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserRegistered",
									"nameLocation": "1474:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "1499:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1491:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:22:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "1534:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1534:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:6:0"
									},
									"scope": 83,
									"src": "1465:133:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 84,
							"src": "60:1541:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								19
							]
						}
					],
					"src": "33:1568:0"
				},
				"id": 0
			}
		}
	}
}